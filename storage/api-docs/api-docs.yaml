swagger: "2.0"
info:
  title: Apartment API Documentation
  description: Apartment API Documentation
  version: 1.0.0
paths:
  /api/register:
    post:
      tags:
        - Authenticate
      summary: 'Đăng ký User mới'
      description: 'Đăng ký User mới'
      produces:
        - application/json
      parameters:
        - name: "email"
          in: "query"
          description: "Email"
          required: true
          type: string
          format: "int64"
        - name: "phone_number"
          in: "query"
          description: "Số điện thoại"
          required: true
          type: string
          format: "int64"
        - name: "apartment_id"
          in: "query"
          description: "Phòng"
          required: true
          type: number
          format: "int64"
        - name: "password"
          in: "query"
          description: "Mật khẩu"
          required: true
          type: string
          format: "int64"
        - name: "password_confirmation"
          in: "query"
          description: "Nhập lại mật khẩu"
          required: true
          type: string
          format: "int64"
        - name: "name"
          in: "query"
          description: "Tên"
          required: false
          type: string
          format: "int64"
        - name: "dob"
          in: "query"
          description: "Ngày sinh"
          required: false
          type: string
          format: "int64"
        - name: "number_card"
          in: "query"
          description: "CMND/CCCD"
          required: false
          type: string
          format: "int64"
        - name: "status"
          in: "query"
          description: "Trạng thái"
          required: false
          type: number
          format: "int64"
        - name: "avatar"
          in: "formData"
          description: "Ảnh cá nhân"
          required: false
          type: file
          format: "int64"
        - name: "role_id"
          in: "query"
          description: "Vai trò"
          required: false
          type: number
          format: "int64"
      responses:
        '200':
          description: 'Đăng ký thành công'
          schema:
            type: object
            properties:
              is_success:
                type: boolean
                example: true
              message:
                type: string
                example: ''
              data:
                type: array
                items:
                  $ref: '#/components/schemas/ApiRegister'
  /api/login:
    post:
      tags:
        - Authenticate
      summary: 'Đăng nhập'
      description: 'Đăng nhập'
      produces:
        - application/json
      parameters:
        - name: "username"
          in: "query"
          description: "Nhập số điện thoại, email hoặc tên phòng"
          required: true
          type: string
        - name: "password"
          in: "query"
          description: "Nhập mật khẩu"
          required: true
          type: string
      responses:
        '200':
          description: "Đăng nhập thành công"
          schema:
            type: object
            properties:
              is_success:
                type: boolean
                example: true
              message:
                type: string
                example: ''
              data:
                type: array
                items:
                  $ref: '#/components/schemas/ApiLogin'
  /api/logout:
    post:
      tags:
        - Authenticate
      summary: 'Đăng xuất'
      description: 'Đăng xuất'
      produces:
        - application/json
      responses:
        '200':
          description: "Đăng xuất thành công"
          schema:
            type: object
            properties:
              is_success:
                type: boolean
                example: true
              message:
                type: string
                example: 'Logged out'
              data:
                type: array
                example: ''

  /api/apartment:
    get:
      tags:
        - Apartment
      summary: 'Danh sách căn hộ'
      description: 'Lấy ra danh sách các căn hộ'
      produces:
        - application/json
      parameters:
        - name: "building_id"
          in: "query"
          description: "Tìm kiếm căn hộ theo tòa nhà"
          required: false
          type: number
          format: "int64"
        - name: "keyword"
          in: "query"
          description: "Tìm kiếm căn hộ theo từ khóa"
          required: false
          type: string
          format: "int64"
        - name: "page"
          in: "query"
          description: "Số thứ tự trang"
          required: false
          type: integer
          format: "int64"
        - name: "page_size"
          in: "query"
          description: "Kích cỡ trang"
          required: false
          type: integer
          format: "int64"
      responses:
        '200':
          description: "Lấy ra danh sách căn hộ thành công"
          schema:
            type: object
            properties:
              is_success:
                type: boolean
                example: true
              message:
                type: string
                example: ''
              data:
                type: array
                items:
                  $ref: '#/components/schemas/ApiApartment'
  /api/apartment/not-owned:
    get:
      tags:
        - Apartment
      summary: 'Danh sách căn hộ chưa đăng ký User'
      description: 'Lấy ra danh sách các căn hộ chưa đăng ký User'
      produces:
        - application/json
      responses:
        '200':
          description: "Lấy ra danh sách căn hộ chưa đăng ký User thành công"
          schema:
            type: object
            properties:
              is_success:
                type: boolean
                example: true
              message:
                type: string
                example: ''
              data:
                type: array
                items:
                  $ref: '#/components/schemas/ApiApartmentNotOwned'
  /api/apartment/add:
    post:
      tags:
        - Apartment
      summary: 'Tạo mới căn hộ'
      description: 'Tạo mới căn hộ'
      produces:
        - application/json
      parameters:
        - name: "apartment_id"
          in: "query"
          description: "Tên phòng"
          required: true
          type: string
        - name: "floor"
          in: "query"
          description: "Tầng"
          required: true
          type: number
        - name: "status"
          in: "query"
          description: "Trạng thái"
          required: true
          type: number
        - name: "description"
          in: "query"
          description: "Mô tả"
          required: false
          type: string
        - name: "square_meters"
          in: "query"
          description: "Diện tích"
          required: false
          type: string
        - name: "type_apartment"
          in: "query"
          description: "Loại phòng"
          required: true
          type: number
        - name: "building_id"
          in: "query"
          description: "Tóa nhà"
          required: true
          type: number
      responses:
        '200':
          description: "Tạo mới căn hộ thành công"
          schema:
            type: object
            properties:
              is_success:
                type: boolean
                example: true
              message:
                type: string
                example: ''
              data:
                type: array
                items:
                  $ref: '#/components/schemas/ApiApartmentAdd'
  /api/apartment/edit/{id}:
    post:
      tags:
        - Apartment
      summary: "Cập nhật căn hộ"
      description: "Cập nhật 1 căn hộ có trong hệ thống"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "Id của căn hộ"
          required: true
          type: "integer"
          format: "int64"
        - name: "apartment_id"
          in: "formData"
          description: "Tên phòng"
          required: true
          type: "string"
        - name: "floor"
          in: "formData"
          description: "Tầng"
          required: true
          type: "integer"
        - name: "status"
          in: "formData"
          description: "Trạng thái"
          required: true
          type: "integer"
        - name: "description"
          in: "formData"
          description: "Mô tả"
          required: false
          type: string
        - name: "square_meters"
          in: "formData"
          description: "Diện tích"
          required: false
          type: "integer"
        - name: "type_apartment"
          in: "formData"
          description: "Loại phòng"
          required: true
          type: "integer"
        - name: "building_id"
          in: "formData"
          description: "Tòa nhà"
          required: true
          type: "integer"
      responses:
        '200':
          description: "Cập nhật căn hộ thành công"
          schema:
            type: object
            properties:
              is_success:
                type: boolean
                example: true
              message:
                type: string
                example: ''
              data:
                type: array
                items:
                  $ref: '#/components/schemas/ApiApartmentEdit'
  /api/apartment/{id}:
    get:
      tags:
        - Apartment
      summary: 'Chi tiết căn hộ'
      description: 'Lấy thông tin chi tiết căn hộ theo Id'
      produces:
        - application/json
      parameters:
        - name: "id"
          in: "path"
          description: "Id của căn hộ"
          required: true
          type: "integer"
          format: "int64"
      responses:
        '200':
          description: "Lấy ra chi tiết căn hộ thành công"
          schema:
            type: object
            properties:
              is_success:
                type: boolean
                example: true
              message:
                type: string
                example: ''
              data:
                type: array
                items:
                  $ref: '#/components/schemas/ApiApartmentDetail'
  /api/apartment/{id}/finance:
    get:
      tags:
        - Apartment
      summary: 'Get finance of apartment by Id'
      description: 'Get finance of apartment by Id'
      produces:
        - application/json
      parameters:
        - name: "id"
          in: "path"
          description: "ID of apartment"
          required: true
          type: "integer"
          format: "int64"
      responses:
        '200':
          description: Finance of apartment by Id.
          schema:
            type: object
            properties:
              is_success:
                type: boolean
                example: true
              message:
                type: string
                example: ''
              data:
                type: array
                items:
                  $ref: ''
  /api/apartment/{id}/finance/unpaid:
    get:
      tags:
        - Apartment
      summary: 'Get unpaid bills of apartment by Id'
      description: 'Get unpaid bills of apartment by Id'
      produces:
        - application/json
      parameters:
        - name: "id"
          in: "path"
          description: "ID of apartment"
          required: true
          type: "integer"
          format: "int64"
      responses:
        '200':
          description: Finance of apartment by Id.
          schema:
            type: object
            properties:
              is_success:
                type: boolean
                example: true
              message:
                type: string
                example: ''
              data:
                type: array
                items:
                  $ref: ''
  /api/apartment/{id}/finance/paid:
    get:
      tags:
        - Apartment
      summary: 'Get paid bills of apartment by Id'
      description: 'Get paid bills of apartment by Id'
      produces:
        - application/json
      parameters:
        - name: "id"
          in: "path"
          description: "ID of apartment"
          required: true
          type: "integer"
          format: "int64"
      responses:
        '200':
          description: Finance of apartment by Id.
          schema:
            type: object
            properties:
              is_success:
                type: boolean
                example: true
              message:
                type: string
                example: ''
              data:
                type: array
                items:
                  $ref: ''
  /api/apartment/{id}/finance/{bill_id}/bill-detail:
    get:
      tags:
        - Apartment
      summary: 'Get bill detail by Apartment Id'
      description: 'Get bill detail by Apartment Id'
      produces:
        - application/json
      parameters:
        - name: "id"
          in: "path"
          description: "ID of Apartment"
          required: true
          type: "integer"
          format: "int64"
        - name: "bill_id"
          in: "path"
          description: "ID of Bill"
          required: true
          type: "integer"
          format: "int64"
      responses:
        '200':
          description: Bill detail by Apartment Id.
          schema:
            type: object
            properties:
              is_success:
                type: boolean
                example: true
              message:
                type: string
                example: ''
              data:
                type: array
                items:
                  $ref: '#/components/schemas/BillDetailByApatmentId'
  /api/apartment/{id}/card:
    get:
      tags:
        - Apartment
      summary: 'Get card of apartment by Id'
      description: 'Get card of apartment by Id'
      produces:
        - application/json
      parameters:
        - name: "id"
          in: "path"
          description: "ID of apartment"
          required: true
          type: "integer"
          format: "int64"
      responses:
        '200':
          description: Finance of apartment by Id.
          schema:
            type: object
            properties:
              is_success:
                type: boolean
                example: true
              message:
                type: string
                example: ''
              data:
                type: array
                items:
                  $ref: ''

  /api/bill:
    get:
      tags:
        - Bill
      summary: 'Get list bill'
      description: 'Get list bill'
      produces:
        - application/json
      responses:
        '200':
          description: A list of bills.
          schema:
            type: object
            properties:
              is_success:
                type: boolean
                example: true
              message:
                type: string
                example: ''
              data:
                type: array
                items:
                  $ref: '#/components/schemas/Bill'
  /api/bill/add:
    post:
      tags:
        - Bill
      summary: 'Add a new bill'
      description: 'Add a new bill'
      produces:
        - application/json
      parameters:
        - name: "name"
          in: "query"
          description: "Name of bill"
          required: true
          type: string
          format: "int64"
        - name: "apartment_id"
          in: "query"
          description: "Apartment of bill"
          required: true
          type: number
          format: "int64"
        - name: "notes"
          in: "query"
          description: "Notes of bill"
          required: false
          type: string
          format: "int64"
      responses:
        '200':
          description:
          schema:
            type: object
            properties:
              is_success:
                type: boolean
                example: true
              message:
                type: string
                example: ''
              data:
                type: array
                items:
                  $ref: '#/components/schemas/NewBill'
  /api/bill/edit/{id}:
    post:
      tags:
        - Bill
      summary: 'Update a bill in the system with form data'
      description: 'Update a bill in the system with form data'
      produces:
        - application/json
      parameters:
        - name: "id"
          in: "path"
          description: "Id of bill"
          required: true
          type: string
          format: "int64"
        - name: "name"
          in: "query"
          description: "Name of bill"
          required: true
          type: string
          format: "int64"
        - name: "status"
          in: "query"
          description: "Status of bill"
          required: true
          type: number
          format: "int64"
        - name: "notes"
          in: "query"
          description: "Notes of bill"
          required: false
          type: string
          format: "int64"
      responses:
        '200':
          description:
          schema:
            type: object
            properties:
              is_success:
                type: boolean
                example: true
              message:
                type: string
                example: ''
              data:
                type: array
                items:
                  $ref: '#/components/schemas/NewBill'
  /api/bill/{id}:
    get:
      tags:
        - Bill
      summary: 'Get Bill by Id'
      description: 'Get Bill by Id'
      produces:
        - application/json
      parameters:
        - name: "id"
          in: "path"
          description: "Id of bill"
          required: true
          type: string
          format: "int64"
      responses:
        '200':
          description:
          schema:
            type: object
            properties:
              is_success:
                type: boolean
                example: true
              message:
                type: string
                example: ''
              data:
                type: array
                items:
                  $ref: ''

  /api/bill-detail:
    get:
      tags:
        - Bill Detail
      summary: 'Get list Bill Detail'
      description: 'Get list Bill Detail'
      produces:
        - application/json
      responses:
        '200':
          description: A list of bill details.
          schema:
            type: object
            properties:
              is_success:
                type: boolean
                example: true
              message:
                type: string
                example: ''
              data:
                type: array
                items:
                  $ref: ''
  /api/bill-detail/add:
    post:
      tags:
        - Bill Detail
      summary: 'Add a new bill detail'
      description: 'Add a new bill detail'
      produces:
        - application/json
      parameters:
        - name: "service_id"
          in: "query"
          description: "Service of bill detail"
          required: true
          type: string
          format: "int64"
        - name: "bill_id"
          in: "query"
          description: "Bill of bill detail"
          required: true
          type: number
          format: "int64"
        - name: "quantity"
          in: "query"
          description: "Quantity of service"
          required: true
          type: number
          format: "int64"
      responses:
        '200':
          description:
          schema:
            type: object
            properties:
              is_success:
                type: boolean
                example: true
              message:
                type: string
                example: ''
              data:
                type: array
                items:
                  $ref: '#/components/schemas/NewBillDetail'
  /api/bill-detail/edit/{id}:
    post:
      tags:
        - Bill Detail
      summary: 'Update a bill detail in the system with form data'
      description: 'Update a bill detail in the system with form data'
      produces:
        - application/json
      parameters:
        - name: "id"
          in: "path"
          description: "Id of bill detail"
          required: true
          type: string
          format: "int64"
        - name: "service_id"
          in: "query"
          description: "Service of bill detail"
          required: true
          type: string
          format: "int64"
        - name: "bill_id"
          in: "query"
          description: "Bill of bill detail"
          required: true
          type: number
          format: "int64"
        - name: "quantity"
          in: "query"
          description: "Quantity of service"
          required: true
          type: number
          format: "int64"
      responses:
        '200':
          description:
          schema:
            type: object
            properties:
              is_success:
                type: boolean
                example: true
              message:
                type: string
                example: ''
              data:
                type: array
                items:
                  $ref: '#/components/schemas/NewBillDetail'
  /api/bill-detail/{id}:
    get:
      tags:
        - Bill Detail
      summary: 'Get Bill Detail by Id'
      description: 'Get Bill Detail by Id'
      produces:
        - application/json
      parameters:
        - name: "id"
          in: "path"
          description: "ID of Bill Detail"
          required: true
          type: "integer"
          format: "int64"
      responses:
        '200':
          description: Bill detail by Id.
          schema:
            type: object
            properties:
              is_success:
                type: boolean
                example: true
              message:
                type: string
                example: ''
              data:
                type: array
                items:
                  $ref: ''

  /api/service:
    get:
      tags:
        - Service
      summary: 'Get list Service'
      description: 'Get list Service'
      produces:
        - application/json
      parameters:
        - name: "keyword"
          in: "query"
          description: "Sắp xếp theo giá"
          required: false
          type: string
          format: "int64"
        - name: "sort"
          in: "query"
          description: "Sắp xếp theo giá"
          required: false
          type: integer
          format: "int64"
        - name: "page"
          in: "query"
          description: "page "
          required: false
          type: integer
          format: "int64"
        - name: "page_size"
          in: "query"
          description: "page "
          required: false
          type: integer
          format: "int64"
      responses:
        '200':
          description: A list of services.
          schema:
            type: object
            properties:
              is_success:
                type: boolean
                example: true
              message:
                type: string
                example: ''
              data:
                type: array
                items:
                  $ref: '#/components/schemas/Service'
  /api/service/add:
    post:
      tags:
        - Service
      summary: 'Add a new service'
      description: 'Add a new service'
      produces:
        - application/json
      parameters:
        - in: "body"
          name: "body"
          description: "Service object that needs to be added to the system"
          required: true
          schema:
            $ref: "#/components/schemas/NewService"
      responses:
        '200':
          description: Add a new service.
          schema:
            type: object
            properties:
              is_success:
                type: boolean
                example: true
              message:
                type: string
                example: ''
              data:
                type: array
                items:
                  $ref: '#/components/schemas/NewService'
  /api/service/edit/{id}:
    post:
      tags:
        - Service
      summary: 'Update a service in the system with form data'
      description: 'Update a service in the system with form data'
      produces:
        - application/json
      parameters:
        - name: "id"
          in: "path"
          description: "Id of service"
          required: true
          type: string
          format: "int64"
        - in: "body"
          name: "body"
          description: "Service object that needs to be added to the system"
          required: true
          schema:
            $ref: "#/components/schemas/NewService"
      responses:
        '200':
          description: Add a new service.
          schema:
            type: object
            properties:
              is_success:
                type: boolean
                example: true
              message:
                type: string
                example: ''
              data:
                type: array
                items:
                  $ref: '#/components/schemas/NewService'
  /api/service/{id}:
    get:
      tags:
        - Service
      summary: 'Get Service by Id'
      description: 'Get Service by Id'
      produces:
        - application/json
      parameters:
        - name: "id"
          in: "path"
          description: "Id of service"
          required: true
          type: string
          format: "int64"
      responses:
        '200':
          description: Get Service by Id.
          schema:
            type: object
            properties:
              is_success:
                type: boolean
                example: true
              message:
                type: string
                example: ''
              data:
                type: array
                items:
                  $ref: ''
  /api/apartment/upload-excel:
    post:
      tags:
        - Apartment
      summary: 'Post Excel apartment'
      description: 'Post Excel apartment'
      produces:
        - application/json
      parameters:
        - name: "file_upload"
          in: "formData"
          description: "File excel upload"
          required: true
          type: file
      responses:
        '200':
          description: Get Service by Id.
          schema:
            type: object
            properties:
              is_success:
                type: boolean
                example: true
              message:
                type: string
                example:
              data:
                type: string
                example: 'Import data from excel success fully'    
  
components:
  schemas:
    ApiRegister:
      type: object
      properties:
        id:
          type: number
          example: 25
        email:
          type: string
          example: "abcabc@gmail.com"
        phone_number:
          type: string
          example: "0844445555"
        name:
          type: string
          example: "Abc Abc"
        dob:
          type: date
          example: "2000-04-04"
        number_card:
          type: string
          example: null
        status:
          type: number
          example: null
        apartment_id:
          type: object
          properties:
            id:
              type: number
              example: 30
            apartment_id:
              type: string
              example: "P209"
            floor:
              type: number
              example: 2
            status:
              type: number
              example: 1
            description:
              type: string
              example: "123"
            square_meters:
              type: number
              example: 290
            type_apartment:
              type: number
              example: 1
            building_id:
              type: number
              example: 2
            user_id:
              type: number
              example: 25
        avatar:
          type: string
          example: null
        role_id:
          type: number
          example: null
      xml:
        name: Register
    ApiLogin:
      type: object
      properties:
        token:
          type: string
          example: "590|0Gxx4c8AunoRjPdHK9LkeGVzchj2wtN8TvgA00rK"
        email:
          type: string
          example: "td.nguyen.1997@gmail.com"
        phone_number:
          type: string
          example: "0399089824"
        name:
          type: string
          example: "Tài Duy"
        dob:
          type: date
          example: "2022-03-10"
        number_card:
          type: string
          example: null
        status:
          type: number
          example: 1
        avatar:
          type: string
          example: null
        role_id:
          type: number
          example: 1
        apartment_id:
          type: string
          example: "P101"
        building_id:
          type: string
          example: "VP1"
      xml:
        name: Login

    ApiApartment:
      type: object
      properties:
        id:
          type: number
          example: 13
        apartment_id:
          type: string
          example: "P101"
        floor:
          type: number
          example: 1
        status:
          type: number
          example: 1
        description:
          type: string
          example: "Phong 2 ban cong"
        square_meters:
          type: number
          example: 50
        type_apartment:
          type: number
          example: 1
        building_id:
          type: string
          example: "VP1"
        email:
          type: string
          example: "td.nguyen.1997@gmail.com"
        phone_number:
          type: string
          example: "0399089824"
        name:
          type: string
          example: "Tài Duy"
      xml:
        name: Apartment
    ApiApartmentNotOwned:
      type: object
      properties:
        id:
          type: number
          example: 31
        apartment_id:
          type: string
          example: "P777"
        floor:
          type: number
          example: 7
        status:
          type: number
          example: 1
        description:
          type: string
          example: "Phong 2 ban cong"
        square_meters:
          type: number
          example: 50
        type_apartment:
          type: number
          example: 1
        building_id:
          type: string
          example: "VP3"
      xml:
        name: ApartmentNotOwned
    ApiApartmentAdd:
      type: object
      properties:
        apartment_id:
          type: string
          example: "P888"
        floor:
          type: number
          example: 8
        status:
          type: number
          example: 1
        description:
          type: text
          example: "Phòng rộng"
        square_meters:
          type: number
          example: 50
        type_apartment:
          type: number
          example: 0
        building_id:
          type: number
          example: 1
        id:
          type: number
          example: 32
      xml:
        name: ApartmentAdd
    ApiApartmentEdit:
      type: object
      properties:
        apartment_id:
          type: string
          example: "P888"
        floor:
          type: number
          example: 8
        status:
          type: number
          example: 1
        description:
          type: text
          example: "Phòng rộng"
        square_meters:
          type: number
          example: 50
        type_apartment:
          type: number
          example: 0
        building_id:
          type: number
          example: 1
        id:
          type: number
          example: 32
      xml:
        name: ApartmentEdit
    ApiApartmentDetail:
      type: object
      properties:
        id:
          type: number
          example: 13
        apartment_id:
          type: string
          example: "P101"
        phone_number:
          type: string
          example: "0399089824"
        building_name:
          type: string
          example: "VP1"
        square_meters:
          type: number
          example: 120
        status:
          type: number
          example: 1
        name:
          type: string
          example: "Tài Duy"
        avatar:
          type: string
          example: null
      xml:
        name: ApartmentDetail
    ApartmentById:
      type: object
      properties:
        apartment_id:
          type: string
          example: "P101"
        floor:
          type: number
          example: 1
        status:
          type: number
          example: 1
        description:
          type: string
          example: "Phong 1 ban cong"
        square_meters:
          type: number
          example: 50
        type_apartment:
          type: number
          example: 1
      xml:
        name: Apartment
    BillDetailByApatmentId:
      type: object
      properties:
        bill_id:
          type: number
          example: 4
        ten_hoa_don:
          type: string
          example: "Hóa đơn tháng 1/2022"
        ten_dich_vu:
          type: string
          example: "Xe máy"
        quantity:
          type: number
          example: 3
        total_price:
          type: number
          example: 160000
        apartment_id:
          type: number
          example: 13
      xml:
        name: Apartment

    Bill:
      type: object
      properties:
        name:
          type: string
          example: "Hóa đơn tháng 1/2022"
        amount:
          type: number
          example: 1060000
        status:
          type: number
          example: 0
        type_payment:
          type: number
          example: 0
        payment_method:
          type: number
          example: 0
        image:
          type: string
          example: null
        fax:
          type: string
          example: null
        apartment_id:
          type: number
          example: 13
        notes:
          type: string
          example: "abc"
        receiver_id:
          type: string
          example: null
      xml:
        name: Bill
    NewBill:
      type: object
      properties:
        name:
          type: string
          example: "Hóa đơn tháng 1/2022"
        amount:
          type: number
          example: 0
        status:
          type: number
          example: 0
        type_payment:
          type: number
          example: 0
        payment_method:
          type: number
          example: 0
        image:
          type: string
          example: null
        fax:
          type: string
          example: null
        apartment_id:
          type: number
          example: 13
        notes:
          type: string
          example: "abc"
        receiver_id:
          type: string
          example: null
      xml:
        name: Bill

    NewBillDetail:
      type: object
      properties:
        service_id:
          type: number
          example: 7
        bill_id:
          type: number
          example: 6
        quantity:
          type: number
          example: 100
        total_price:
          type: number
          example: 150000
        id:
          type: number
          example: 17
      xml:
        name: BillDetail

    Service:
      type: object
      properties:
        name:
          type: string
          example: "Tien dien"
        price:
          type: number
          example: 150000
        description:
          type: string
          example: "Tien dien thang 1/2022"
      xml:
        name: Service
    NewService:
      type: object
      properties:
        name:
          type: string
          example: "Tien nuoc"
        price:
          type: number
          example: 50000
        description:
          type: string
          example: "Tien nuoc thang 1/2022"
      xml:
        name: Service
