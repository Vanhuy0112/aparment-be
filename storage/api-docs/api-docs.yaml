swagger: "2.0"
info:
  title: Apartment API Documentation
  description: Apartment API Documentation
  version: 1.0.0
paths:
  /api/register:
    post:
      tags:
        - Authenticate
      summary: 'Register new user'
      description: 'Register new user'
      produces:
        - application/json
      parameters:
        - in: "body"
          name: "body"
          description: "Information new user"
          required: true
          schema:
            type: "array"
            items:
              $ref: "#/components/schemas/RequestRegister"
      responses:
        '200':
          description: Register new user'.
          schema:
            type: object
            properties:
              is_success:
                type: boolean
                example: true
              message:
                type: string
                example: 'User Registered'
              data:
                type: object
                items:
                  $ref: '#/components/schemas/Register'
  /api/login:
    post:
      tags:
        - Authenticate
      summary: 'Login into the system'
      description: 'Login'
      produces:
        - application/json
      parameters:
        - name: "username"
          in: "query"
          description: "Type your Email or Phone Number"
          required: true
          type: "string"
        - name: "password"
          in: "query"
          description: "Type your Password"
          required: true
          type: "string"
      responses:
        '200':
          description: Login successfully.
          schema:
            type: object
            properties:
              is_success:
                type: boolean
                example: true
              message:
                type: string
                example: ''
              data:
                type: array
                items:
                  $ref: '#/components/schemas/Login'
  /api/logout:
    post:
      tags:
        - Authenticate
      summary: 'Logout'
      description: 'Logout'
      produces:
        - application/json
      responses:
        '200':
          description: Logout'.
          schema:
            type: object
            properties:
              is_success:
                type: boolean
                example: true
              message:
                type: string
                example: 'Logged out'

  /api/apartment:
    get:
      tags:
        - Apartment
      summary: 'Get list apartment'
      description: 'Get list apartment'
      produces:
        - application/json
      responses:
        '200':
          description: A list of apartments.
          schema:
            type: object
            properties:
              is_success:
                type: boolean
                example: true
              message:
                type: string
                example: ''
              data:
                type: array
                items:
                  $ref: '#/components/schemas/Apartment'
  /api/apartment/add:
    post:
      tags:
        - Apartment
      summary: 'Add a new apartment'
      description: 'Add a new apartment'
      produces:
        - application/json
      parameters:
        - in: "body"
          name: "body"
          description: "Apartment object that needs to be added to the system"
          required: true
          schema:
            $ref: "#/components/schemas/NewApartment"
      responses:
        '200':
          description:
          schema:
            type: object
            properties:
              is_success:
                type: boolean
                example: true
              message:
                type: string
                example: ''
              data:
                type: array
                items:
                  $ref: '#/components/schemas/NewApartment'
  /api/apartment/edit/{id}:
    post:
      tags:
        - Apartment
      summary: "Updates an apartment in the system with form data"
      description: ""
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "Id of apartment that needs to be updated"
          required: true
          type: "integer"
          format: "int64"
        - name: "apartment_id"
          in: "formData"
          description: "New apartment_id of apartment"
          required: true
          type: "string"
        - name: "floor"
          in: "formData"
          description: "New floor of apartment"
          required: true
          type: "integer"
        - name: "status"
          in: "formData"
          description: "New status of apartment"
          required: true
          type: "integer"
        - name: "description"
          in: "formData"
          description: "New description of apartment"
          required: false
          type: string
        - name: "square_meters"
          in: "formData"
          description: "New square_meters of apartment"
          required: false
          type: "integer"
        - name: "type_apartment"
          in: "formData"
          description: "New type_apartment of apartment"
          required: true
          type: "integer"
        - name: "building_id"
          in: "formData"
          description: "New building_id of apartment"
          required: true
          type: "integer"
      responses:
        '200':
          description:
          schema:
            type: object
            properties:
              is_success:
                type: boolean
                example: true
              message:
                type: string
                example: ''
              data:
                type: array
                items:
                  $ref: '#/components/schemas/NewApartment'
  /api/apartment/{id}:
    get:
      tags:
        - Apartment
      summary: 'Get Apartment by Id'
      description: 'Get Apartment by Id'
      produces:
        - application/json
      parameters:
        - name: "id"
          in: "path"
          description: "ID of apartment"
          required: true
          type: "integer"
          format: "int64"
      responses:
        '200':
          description: Apartment by Id.
          schema:
            type: object
            properties:
              is_success:
                type: boolean
                example: true
              message:
                type: string
                example: ''
              data:
                type: array
                items:
                  $ref: ''
  /api/apartment/{id}/finance:
    get:
      tags:
        - Apartment
      summary: 'Get finance of apartment by Id'
      description: 'Get finance of apartment by Id'
      produces:
        - application/json
      parameters:
        - name: "id"
          in: "path"
          description: "ID of apartment"
          required: true
          type: "integer"
          format: "int64"
      responses:
        '200':
          description: Finance of apartment by Id.
          schema:
            type: object
            properties:
              is_success:
                type: boolean
                example: true
              message:
                type: string
                example: ''
              data:
                type: array
                items:
                  $ref: ''
  /api/apartment/{id}/finance/unpaid:
    get:
      tags:
        - Apartment
      summary: 'Get unpaid bills of apartment by Id'
      description: 'Get unpaid bills of apartment by Id'
      produces:
        - application/json
      parameters:
        - name: "id"
          in: "path"
          description: "ID of apartment"
          required: true
          type: "integer"
          format: "int64"
      responses:
        '200':
          description: Finance of apartment by Id.
          schema:
            type: object
            properties:
              is_success:
                type: boolean
                example: true
              message:
                type: string
                example: ''
              data:
                type: array
                items:
                  $ref: ''
  /api/apartment/{id}/finance/paid:
    get:
      tags:
        - Apartment
      summary: 'Get paid bills of apartment by Id'
      description: 'Get paid bills of apartment by Id'
      produces:
        - application/json
      parameters:
        - name: "id"
          in: "path"
          description: "ID of apartment"
          required: true
          type: "integer"
          format: "int64"
      responses:
        '200':
          description: Finance of apartment by Id.
          schema:
            type: object
            properties:
              is_success:
                type: boolean
                example: true
              message:
                type: string
                example: ''
              data:
                type: array
                items:
                  $ref: ''
  /api/apartment/{id}/finance/{bill_id}/bill-detail:
    get:
      tags:
        - Apartment
      summary: 'Get bill detail by Apartment Id'
      description: 'Get bill detail by Apartment Id'
      produces:
        - application/json
      parameters:
        - name: "id"
          in: "path"
          description: "ID of Apartment"
          required: true
          type: "integer"
          format: "int64"
        - name: "bill_id"
          in: "path"
          description: "ID of Bill"
          required: true
          type: "integer"
          format: "int64"
      responses:
        '200':
          description: Bill detail by Apartment Id.
          schema:
            type: object
            properties:
              is_success:
                type: boolean
                example: true
              message:
                type: string
                example: ''
              data:
                type: array
                items:
                  $ref: '#/components/schemas/BillDetailByApatmentId'
  /api/apartment/{id}/card:
    get:
      tags:
        - Apartment
      summary: 'Get card of apartment by Id'
      description: 'Get card of apartment by Id'
      produces:
        - application/json
      parameters:
        - name: "id"
          in: "path"
          description: "ID of apartment"
          required: true
          type: "integer"
          format: "int64"
      responses:
        '200':
          description: Finance of apartment by Id.
          schema:
            type: object
            properties:
              is_success:
                type: boolean
                example: true
              message:
                type: string
                example: ''
              data:
                type: array
                items:
                  $ref: ''

  /api/bill:
    get:
      tags:
        - Bill
      summary: 'Get list bill'
      description: 'Get list bill'
      produces:
        - application/json
      responses:
        '200':
          description: A list of bills.
          schema:
            type: object
            properties:
              is_success:
                type: boolean
                example: true
              message:
                type: string
                example: ''
              data:
                type: array
                items:
                  $ref: '#/components/schemas/Bill'
  /api/bill/add:
    post:
      tags:
        - Bill
      summary: 'Add a new bill'
      description: 'Add a new bill'
      produces:
        - application/json
      parameters:
        - name: "name"
          in: "query"
          description: "Name of bill"
          required: true
          type: string
          format: "int64"
        - name: "apartment_id"
          in: "query"
          description: "Apartment of bill"
          required: true
          type: number
          format: "int64"
        - name: "notes"
          in: "query"
          description: "Notes of bill"
          required: false
          type: string
          format: "int64"
      responses:
        '200':
          description:
          schema:
            type: object
            properties:
              is_success:
                type: boolean
                example: true
              message:
                type: string
                example: ''
              data:
                type: array
                items:
                  $ref: '#/components/schemas/NewBill'
  /api/bill/edit/{id}:
    post:
      tags:
        - Bill
      summary: 'Update a bill in the system with form data'
      description: 'Update a bill in the system with form data'
      produces:
        - application/json
      parameters:
        - name: "id"
          in: "path"
          description: "Id of bill"
          required: true
          type: string
          format: "int64"
        - name: "name"
          in: "query"
          description: "Name of bill"
          required: true
          type: string
          format: "int64"
        - name: "status"
          in: "query"
          description: "Status of bill"
          required: true
          type: number
          format: "int64"
        - name: "notes"
          in: "query"
          description: "Notes of bill"
          required: false
          type: string
          format: "int64"
      responses:
        '200':
          description:
          schema:
            type: object
            properties:
              is_success:
                type: boolean
                example: true
              message:
                type: string
                example: ''
              data:
                type: array
                items:
                  $ref: '#/components/schemas/NewBill'
  /api/bill/{id}:
    get:
      tags:
        - Bill
      summary: 'Get Bill by Id'
      description: 'Get Bill by Id'
      produces:
        - application/json
      parameters:
        - name: "id"
          in: "path"
          description: "Id of bill"
          required: true
          type: string
          format: "int64"
      responses:
        '200':
          description:
          schema:
            type: object
            properties:
              is_success:
                type: boolean
                example: true
              message:
                type: string
                example: ''
              data:
                type: array
                items:
                  $ref: ''

  /api/bill-detail:
    get:
      tags:
        - Bill Detail
      summary: 'Get list Bill Detail'
      description: 'Get list Bill Detail'
      produces:
        - application/json
      responses:
        '200':
          description: A list of bill details.
          schema:
            type: object
            properties:
              is_success:
                type: boolean
                example: true
              message:
                type: string
                example: ''
              data:
                type: array
                items:
                  $ref: ''
  /api/bill-detail/add:
    post:
      tags:
        - Bill Detail
      summary: 'Add a new bill detail'
      description: 'Add a new bill detail'
      produces:
        - application/json
      parameters:
        - name: "service_id"
          in: "query"
          description: "Service of bill detail"
          required: true
          type: string
          format: "int64"
        - name: "bill_id"
          in: "query"
          description: "Bill of bill detail"
          required: true
          type: number
          format: "int64"
        - name: "quantity"
          in: "query"
          description: "Quantity of service"
          required: true
          type: number
          format: "int64"
      responses:
        '200':
          description:
          schema:
            type: object
            properties:
              is_success:
                type: boolean
                example: true
              message:
                type: string
                example: ''
              data:
                type: array
                items:
                  $ref: '#/components/schemas/NewBillDetail'
  /api/bill-detail/edit/{id}:
    post:
      tags:
        - Bill Detail
      summary: 'Update a bill detail in the system with form data'
      description: 'Update a bill detail in the system with form data'
      produces:
        - application/json
      parameters:
        - name: "id"
          in: "path"
          description: "Id of bill detail"
          required: true
          type: string
          format: "int64"
        - name: "service_id"
          in: "query"
          description: "Service of bill detail"
          required: true
          type: string
          format: "int64"
        - name: "bill_id"
          in: "query"
          description: "Bill of bill detail"
          required: true
          type: number
          format: "int64"
        - name: "quantity"
          in: "query"
          description: "Quantity of service"
          required: true
          type: number
          format: "int64"
      responses:
        '200':
          description:
          schema:
            type: object
            properties:
              is_success:
                type: boolean
                example: true
              message:
                type: string
                example: ''
              data:
                type: array
                items:
                  $ref: '#/components/schemas/NewBillDetail'
  /api/bill-detail/{id}:
    get:
      tags:
        - Bill Detail
      summary: 'Get Bill Detail by Id'
      description: 'Get Bill Detail by Id'
      produces:
        - application/json
      parameters:
        - name: "id"
          in: "path"
          description: "ID of Bill Detail"
          required: true
          type: "integer"
          format: "int64"
      responses:
        '200':
          description: Bill detail by Id.
          schema:
            type: object
            properties:
              is_success:
                type: boolean
                example: true
              message:
                type: string
                example: ''
              data:
                type: array
                items:
                  $ref: ''

  /api/service:
    get:
      tags:
        - Service
      summary: 'Get list Service'
      description: 'Get list Service'
      produces:
        - application/json
      responses:
        '200':
          description: A list of services.
          schema:
            type: object
            properties:
              is_success:
                type: boolean
                example: true
              message:
                type: string
                example: ''
              data:
                type: array
                items:
                  $ref: '#/components/schemas/Service'
  /api/service/add:
    post:
      tags:
        - Service
      summary: 'Add a new service'
      description: 'Add a new service'
      produces:
        - application/json
      parameters:
        - in: "body"
          name: "body"
          description: "Service object that needs to be added to the system"
          required: true
          schema:
            $ref: "#/components/schemas/NewService"
      responses:
        '200':
          description: Add a new service.
          schema:
            type: object
            properties:
              is_success:
                type: boolean
                example: true
              message:
                type: string
                example: ''
              data:
                type: array
                items:
                  $ref: '#/components/schemas/NewService'
  /api/service/edit/{id}:
    post:
      tags:
        - Service
      summary: 'Update a service in the system with form data'
      description: 'Update a service in the system with form data'
      produces:
        - application/json
      parameters:
        - name: "id"
          in: "path"
          description: "Id of service"
          required: true
          type: string
          format: "int64"
        - in: "body"
          name: "body"
          description: "Service object that needs to be added to the system"
          required: true
          schema:
            $ref: "#/components/schemas/NewService"
      responses:
        '200':
          description: Add a new service.
          schema:
            type: object
            properties:
              is_success:
                type: boolean
                example: true
              message:
                type: string
                example: ''
              data:
                type: array
                items:
                  $ref: '#/components/schemas/NewService'
  /api/service/{id}:
    get:
      tags:
        - Service
      summary: 'Get Service by Id'
      description: 'Get Service by Id'
      produces:
        - application/json
      parameters:
        - name: "id"
          in: "path"
          description: "Id of service"
          required: true
          type: string
          format: "int64"
      responses:
        '200':
          description: Get Service by Id.
          schema:
            type: object
            properties:
              is_success:
                type: boolean
                example: true
              message:
                type: string
                example: ''
              data:
                type: array
                items:
                  $ref: ''
  /api/apartment/upload-excel:
    post:
      tags:
        - Apartment
      summary: 'Post Excel apartment'
      description: 'Post Excel apartment'
      produces:
        - application/json
      parameters:
        - name: "file_upload"
          in: "formData"
          description: "File excel upload"
          required: true
          type: file
      responses:
        '200':
          description: Get Service by Id.
          schema:
            type: object
            properties:
              is_success:
                type: boolean
                example: true
              message:
                type: string
                example:
              data:
                type: string
                example: 'Import data from excel success fully'

components:
  schemas:
    RequestRegister:
      type: object
      properties:
        user_name:
          type: string
          example: "ty5"
        email:
          type: string
          example: "ty5@gmail.com"
        name:
          type: string
          example: "Duc Anh"
        password:
          type: string
          example: "123456"
        password_comfirmation:
          type: string
          example: "123456"
        apartment_id:
          type: number
          example: 1
        role:
          type: number
          example: 1
      xml:
        name: RequestRegister
    Register:
      type: object
      properties:
        token:
          type: string
          example: "7|OZ6J1PNvifzScSlKCCOXL743AF0mSxOEjkTfyVZo"
        user:
          type: object
          properties:
            user_name:
              type: string
              example: "ty5"
            email:
              type: string
              example: "ty5@gmail.com"
            name:
              type: string
              example: "Duc Anh"
            apartment_id:
              type: number
              example: 1
            role:
              type: number
              example: 1
            created_at:
              type: datetime
              example: "2022-01-20T06:03:10.000000Z"
            updated_at:
              type: datetime
              example: "2022-01-20T06:03:10.000000Z"
      xml:
        name: Register
    Login:
      type: object
      properties:
        token:
          type: string
          example: "28|QgGSL8vv33zKmWDHd07Y6vOur7lfixfEtEzTnWM0"
        apartment_id:
          type: string
          example: "P300"
        floor:
          type: number
          example: 1
        status:
          type: number
          example: 0
        description:
          type: string
          example: "Phòng rộng"
        square_meters:
          type: number
          example: 60
        type_apartment:
          type: number
          example: 1
        tower:
          type: string
          expamle: "P"
        user_id:
          type: number
          example: 1
      xml:
        name: Login

    Apartment:
      type: object
      properties:
        apartment_id:
          type: string
          example: "P101"
        floor:
          type: number
          example: 1
        status:
          type: number
          example: 1
        description:
          type: string
          example: "Phong 2 ban cong"
        square_meters:
          type: number
          example: 50
        type_apartment:
          type: number
          example: 1
      xml:
        name: Apartment
    NewApartment:
      type: object
      properties:
        apartment_id:
          type: string
          required: true
          example: "P101"
        floor:
          type: number
          example: 1
        status:
          type: number
          example: 0
        description:
          type: text
          example: "Phòng rộng"
        square_meters:
          type: number
          example: 50
        type_apartment:
          type: number
          example: 0
        building_id:
          type: number
          example: 1
      xml:
        name: Service
    ApartmentById:
      type: object
      properties:
        apartment_id:
          type: string
          example: "P101"
        floor:
          type: number
          example: 1
        status:
          type: number
          example: 1
        description:
          type: string
          example: "Phong 1 ban cong"
        square_meters:
          type: number
          example: 50
        type_apartment:
          type: number
          example: 1
      xml:
        name: Apartment
    BillDetailByApatmentId:
      type: object
      properties:
        bill_id:
          type: number
          example: 4
        ten_hoa_don:
          type: string
          example: "Hóa đơn tháng 1/2022"
        ten_dich_vu:
          type: string
          example: "Xe máy"
        quantity:
          type: number
          example: 3
        total_price:
          type: number
          example: 160000
        apartment_id:
          type: number
          example: 13
      xml:
        name: Apartment

    Bill:
      type: object
      properties:
        name:
          type: string
          example: "Hóa đơn tháng 1/2022"
        amount:
          type: number
          example: 1060000
        status:
          type: number
          example: 0
        type_payment:
          type: number
          example: 0
        payment_method:
          type: number
          example: 0
        image:
          type: string
          example: null
        fax:
          type: string
          example: null
        apartment_id:
          type: number
          example: 13
        notes:
          type: string
          example: "abc"
        receiver_id:
          type: string
          example: null
      xml:
        name: Bill
    NewBill:
      type: object
      properties:
        name:
          type: string
          example: "Hóa đơn tháng 1/2022"
        amount:
          type: number
          example: 0
        status:
          type: number
          example: 0
        type_payment:
          type: number
          example: 0
        payment_method:
          type: number
          example: 0
        image:
          type: string
          example: null
        fax:
          type: string
          example: null
        apartment_id:
          type: number
          example: 13
        notes:
          type: string
          example: "abc"
        receiver_id:
          type: string
          example: null
      xml:
        name: Bill

    NewBillDetail:
      type: object
      properties:
        service_id:
          type: number
          example: 7
        bill_id:
          type: number
          example: 6
        quantity:
          type: number
          example: 100
        total_price:
          type: number
          example: 150000
        id:
          type: number
          example: 17
      xml:
        name: BillDetail

    Service:
      type: object
      properties:
        name:
          type: string
          example: "Tien dien"
        price:
          type: number
          example: 150000
        description:
          type: string
          example: "Tien dien thang 1/2022"
      xml:
        name: Service
    NewService:
      type: object
      properties:
        name:
          type: string
          example: "Tien nuoc"
        price:
          type: number
          example: 50000
        description:
          type: string
          example: "Tien nuoc thang 1/2022"
      xml:
        name: Service
